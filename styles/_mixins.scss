@use 'variables' as *;

/* ============================================
    Media queries
*/
@mixin media-query($queries...) {
  @each $query in $queries {
    @each $breakpoint in $breakpoints {
      $name: nth($breakpoint, 1);
      $declaration: nth($breakpoint, 2);

      @if $query == $name and $declaration {
        @media only screen and #{$declaration} {
          @content;
        }
      }
    }
  }
}

/* ============================================
    z-index
*/

@mixin z-index($key) {
  z-index: z-index($key);
}

// Todo: not required?
@function z-index($key) {
  @return map-get($z-index, $key);
}

/* ============================================
  Hide text
*/
@mixin hidden() {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* ============================================
  iOS Native vertical scroll
*/
@mixin native-vertical-scroll() {
  overflow-x: hidden;
  overflow-y: scroll;
  -webkit-overflow-scrolling: touch;
}

/* ============================================
    Font sizes
*/

@mixin font-size($size) {
  @if $size == null {
    @warn 'Font size ‘#{$keyword}’ does not exist';
  } @else {
    $clamp-size: map-get($font-size-map, $size);
    font-size: $clamp-size;
  }
}

/* ============================================
    Animations
*/

@mixin animation() {
  @keyframes fadeOut {
    0% {
      opacity: 1;
      display: block;
    }

    100% {
      opacity: 0;
      display: none;
    }
  }
}

/* ============================================
    Focus outline
*/

@mixin focus-outline() {
  &:focus-visible {
    border-radius: $border-radius;
    outline: 3px solid var(--color--primary);
    outline-offset: 3px;
  }
}

@mixin focus-outline-inverse() {
  &:focus-visible {
    border-radius: $border-radius;
    outline: 3px solid var(--color--highlight-green);
    outline-offset: 3px;
  }
}

/* ============================================
    Link underscore
*/

@mixin highlight-link {
  position: relative;
  display: inline;
  border-radius: $border-radius;
  text-underline-offset: 2px;
  text-decoration-thickness: 2px;
  text-decoration: underline;
  text-decoration-skip-ink: none;
  text-decoration-color: var(--color--underline);
  background-position: 0 -100%;

  @include media-query(medium) {
    text-decoration-thickness: 3px;
    text-underline-offset: 3px;
  }

  &:hover {
    text-decoration-thickness: 5px;
  }
}

@mixin external-highlight-link {
  @include highlight-link();
  @include focus-outline();

  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-end;
  width: max-content;
  margin: 0;
  gap: 4px;
  color: var(--color--text);

  svg path {
    fill: var(--color--primary);
    transition:
      transform $transition,
      fill $transition;
  }

  &:hover {
    color: var(--color--text);

    svg path {
      fill: var(--color--text);
      transform: translate(2px, -2px);
    }
  }
}

@mixin h1() {
  @include font-size(xl);
  line-height: 1.1;
  letter-spacing: -1px;
  margin-bottom: $grid;

  @include media-query(large) {
    @include font-size(xxl);
    letter-spacing: -1.5px;
    max-width: 20ch;
    margin-bottom: $grid * 2;
  }
}

@mixin heading-text() {
  font-style: inherit;
  font-weight: inherit;
}

@mixin body-text() {
  font-style: inherit;
  font-weight: inherit;
  text-transform: inherit;
}

/* ============================================
    Grid
*/

@mixin main-grid() {
  display: grid;
  grid-template-columns: $grid 1fr $grid;

  @include media-query(medium) {
    grid-template-columns: $grid * 3 1fr $grid * 3;
  }

  @include media-query(large) {
    grid-template-columns: $grid * 6 1fr $grid * 6;
  }
}
